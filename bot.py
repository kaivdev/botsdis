import discord
from discord.ext import commands, tasks
import time
import json
from datetime import datetime, timedelta
from collections import defaultdict

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–æ—Ç–∞ —Å –ø–æ–ª–Ω—ã–º–∏ –∏–Ω—Ç–µ–Ω—Ç–∞–º–∏
intents = discord.Intents.all()  # –í–∫–ª—é—á–∞–µ–º –≤—Å–µ –∏–Ω—Ç–µ–Ω—Ç—ã

bot = commands.Bot(command_prefix='!', intents=intents)

# –°–ª–æ–≤–∞—Ä–∏ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è
last_join = {}
last_leave = {}
user_voice_time = defaultdict(int)  # –û–±—â–µ–µ –≤—Ä–µ–º—è –≤ –≥–æ–ª–æ—Å–æ–≤—ã—Ö –∫–∞–Ω–∞–ª–∞—Ö
user_session_start = {}  # –í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ —Ç–µ–∫—É—â–µ–π —Å–µ—Å—Å–∏–∏
COOLDOWN_TIME = 300

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
def save_stats():
    """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –≤ —Ñ–∞–π–ª"""
    data = {
        'user_voice_time': dict(user_voice_time),
        'last_reset': time.time()
    }
    with open('voice_stats.json', 'w') as f:
        json.dump(data, f)

def load_stats():
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏–∑ —Ñ–∞–π–ª–∞"""
    try:
        with open('voice_stats.json', 'r') as f:
            data = json.load(f)
            # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –∫–ª—é—á–∏ –æ–±—Ä–∞—Ç–Ω–æ –≤ int, —Ç–∞–∫ –∫–∞–∫ JSON —Ö—Ä–∞–Ω–∏—Ç –∏—Ö –∫–∞–∫ —Å—Ç—Ä–æ–∫–∏
            user_voice_time.clear()
            user_voice_time.update({int(k): v for k, v in data['user_voice_time'].items()})
    except FileNotFoundError:
        print("–§–∞–π–ª —Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π –Ω–µ –Ω–∞–π–¥–µ–Ω, –Ω–∞—á–∏–Ω–∞–µ–º —Å –ø—É—Å—Ç–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}")

def format_time(seconds):
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –≤—Ä–µ–º—è –≤ —á–∏—Ç–∞–µ–º—ã–π –≤–∏–¥"""
    hours = int(seconds // 3600)
    minutes = int((seconds % 3600) // 60)
    
    if hours > 0:
        if minutes > 0:
            return f"{hours} —á {minutes} –º–∏–Ω"
        return f"{hours} —á"
    return f"{minutes} –º–∏–Ω"

@bot.event
async def on_ready():
    print(f'{bot.user} –ø–æ–¥–∫–ª—é—á–∏–ª—Å—è –∫ Discord!')
    load_stats()  # –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
    weekly_report.start()  # –ó–∞–ø—É—Å–∫–∞–µ–º –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç

@bot.event
async def on_voice_state_update(member, before, after):
    try:
        current_time = time.time()
        notification_channel = bot.get_channel(1351697916405874719)
        
        print(f"–û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è:")
        print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {member.name}")
        print(f"–î–æ: {before.channel.name if before.channel else '–ù–µ—Ç –∫–∞–Ω–∞–ª–∞'}")
        print(f"–ü–æ—Å–ª–µ: {after.channel.name if after.channel else '–ù–µ—Ç –∫–∞–Ω–∞–ª–∞'}")
        
        if not notification_channel:
            print(f"–û—à–∏–±–∫–∞: –ù–µ –º–æ–≥—É –Ω–∞–π—Ç–∏ –∫–∞–Ω–∞–ª —Å ID 1351697916405874719")
            return
            
        try:
            # –í—Ö–æ–¥ –≤ –∫–∞–Ω–∞–ª
            if before.channel is None and after.channel is not None:
                can_send_join = True
                if member.id in last_join:
                    time_passed = current_time - last_join[member.id]
                    print(f"–ü—Ä–æ—à–ª–æ –≤—Ä–µ–º–µ–Ω–∏ —Å –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –≤—Ö–æ–¥–∞: {time_passed} —Å–µ–∫—É–Ω–¥")
                    if time_passed < COOLDOWN_TIME:
                        can_send_join = False
                        print(f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ –≤—Ö–æ–¥–µ –ø—Ä–æ–ø—É—â–µ–Ω–æ –∏–∑-–∑–∞ –∑–∞–¥–µ—Ä–∂–∫–∏")
                
                if can_send_join:
                    await notification_channel.send(f'üé§ {member.name} –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É {after.channel.name}')
                    print(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –≤—Ö–æ–¥–µ –≤ –∫–∞–Ω–∞–ª")
                    last_join[member.id] = current_time
            
            # –í—ã—Ö–æ–¥ –∏–∑ –∫–∞–Ω–∞–ª–∞
            elif before.channel is not None and after.channel is None:
                can_send_leave = True
                if member.id in last_leave:
                    time_passed = current_time - last_leave[member.id]
                    print(f"–ü—Ä–æ—à–ª–æ –≤—Ä–µ–º–µ–Ω–∏ —Å –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –≤—ã—Ö–æ–¥–∞: {time_passed} —Å–µ–∫—É–Ω–¥")
                    if time_passed < COOLDOWN_TIME:
                        can_send_leave = False
                        print(f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ –≤—ã—Ö–æ–¥–µ –ø—Ä–æ–ø—É—â–µ–Ω–æ –∏–∑-–∑–∞ –∑–∞–¥–µ—Ä–∂–∫–∏")
                
                if can_send_leave:
                    await notification_channel.send(f'üëã {member.name} –ø–æ–∫–∏–Ω—É–ª –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª {before.channel.name}')
                    print(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –≤—ã—Ö–æ–¥–µ –∏–∑ –∫–∞–Ω–∞–ª–∞")
                    last_leave[member.id] = current_time
            
            # –ü–µ—Ä–µ—Ö–æ–¥ –º–µ–∂–¥—É –∫–∞–Ω–∞–ª–∞–º–∏
            elif before.channel != after.channel:
                await notification_channel.send(f'‚ÜîÔ∏è {member.name} –ø–µ—Ä–µ—à–µ–ª –∏–∑ –∫–∞–Ω–∞–ª–∞ {before.channel.name} –≤ –∫–∞–Ω–∞–ª {after.channel.name}')
                print(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø–µ—Ä–µ—Ö–æ–¥–µ –º–µ–∂–¥—É –∫–∞–Ω–∞–ª–∞–º–∏")
                
            # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ —Å–µ—Å—Å–∏–∏
            if before.channel is None and after.channel is not None:
                user_session_start[member.id] = current_time
            
            # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –≤—Ä–µ–º—è –≤ –∫–∞–Ω–∞–ª–µ
            if before.channel is not None and after.channel is None:
                if member.id in user_session_start:
                    session_duration = current_time - user_session_start[member.id]
                    user_voice_time[member.id] += session_duration
                    del user_session_start[member.id]
                    save_stats()  # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
                
        except discord.errors.Forbidden:
            print(f"–û—à–∏–±–∫–∞: –£ –±–æ—Ç–∞ –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –∫–∞–Ω–∞–ª")
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {str(e)}")
                
    except Exception as e:
        print(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}")

@tasks.loop(hours=168)  # 168 —á–∞—Å–æ–≤ = 1 –Ω–µ–¥–µ–ª—è
async def weekly_report():
    notification_channel = bot.get_channel(1351697916405874719)
    
    # –°–æ–∑–¥–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –∏—Ö –≤—Ä–µ–º–µ–Ω–∏
    user_times = []
    for user_id, total_time in user_voice_time.items():
        try:
            user = await bot.fetch_user(user_id)
            user_times.append((user.name, total_time))
        except:
            continue
    
    # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –≤—Ä–µ–º–µ–Ω–∏ –∏ –±–µ—Ä–µ–º —Ç–æ–ø 5
    top_users = sorted(user_times, key=lambda x: x[1], reverse=True)[:5]
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç
    report = "üìä **–ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç –ø–æ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –≤ –≥–æ–ª–æ—Å–æ–≤—ã—Ö –∫–∞–Ω–∞–ª–∞—Ö:**\n\n"
    for i, (name, seconds) in enumerate(top_users, 1):
        formatted_time = format_time(seconds)
        report += f"{i}. {name}: {formatted_time}\n"
    
    await notification_channel.send(report)
    
    # –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –ø—É—Å—Ç–æ–π —Ñ–∞–π–ª
    user_voice_time.clear()
    save_stats()

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
@bot.command()
async def stats(ctx):
    # –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–µ —Å–µ–π—á–∞—Å –≤ –∫–∞–Ω–∞–ª–∞—Ö
    current_time = time.time()
    for user_id in user_session_start:
        session_duration = current_time - user_session_start[user_id]
        user_voice_time[user_id] += session_duration
    
    # –°–æ–∑–¥–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –∏—Ö –≤—Ä–µ–º–µ–Ω–∏
    user_times = []
    for user_id, total_time in user_voice_time.items():
        try:
            user = await bot.fetch_user(user_id)
            user_times.append((user.name, total_time))
        except:
            continue
    
    # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –≤—Ä–µ–º–µ–Ω–∏ –∏ –±–µ—Ä–µ–º —Ç–æ–ø 5
    top_users = sorted(user_times, key=lambda x: x[1], reverse=True)[:5]
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç
    report = "üìä **–¢–µ–∫—É—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –≤ –≥–æ–ª–æ—Å–æ–≤—ã—Ö –∫–∞–Ω–∞–ª–∞—Ö:**\n\n"
    for i, (name, seconds) in enumerate(top_users, 1):
        formatted_time = format_time(seconds)
        report += f"{i}. {name}: {formatted_time}\n"
    
    await ctx.send(report)
    save_stats()  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É

# –ó–∞–º–µ–Ω–∏—Ç–µ 'YOUR_TOKEN' –Ω–∞ —Ç–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –±–æ—Ç–∞
bot.run('MTM1MTYxMzY0NjY3Mjc1Njg2Nw.GyoeUw.2XM-7BieJL-Q8212IXyFq1pcSHv5Srmdazw7Jk') 